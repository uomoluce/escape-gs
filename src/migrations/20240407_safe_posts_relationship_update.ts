import { MigrateUpArgs, MigrateDownArgs } from '@payloadcms/db-postgres'

export async function up({ payload }: MigrateUpArgs): Promise<void> {
  // 1. First, backup the existing relationships
  await payload.db.pool.query(`
    CREATE TABLE IF NOT EXISTS posts_rels_backup AS 
    SELECT * FROM posts_rels;
    
    CREATE TABLE IF NOT EXISTS posts_v_rels_backup AS 
    SELECT * FROM _posts_v_rels;
  `)

  // 2. Then apply the schema changes
  await payload.db.pool.query(`
    -- Your schema changes here
    -- This will be automatically generated by Payload
  `)

  // 3. Verify the migration was successful
  const verify = await payload.db.pool.query(`
    SELECT COUNT(*) as count FROM posts_rels_backup;
    SELECT COUNT(*) as count FROM posts_v_rels_backup;
  `)

  console.log('Migration completed. Backup counts:', verify)
}

export async function down({ payload }: MigrateDownArgs): Promise<void> {
  // Rollback procedure if needed
  await payload.db.pool.query(`
    -- Restore from backup if needed
    DROP TABLE IF EXISTS posts_rels_backup;
    DROP TABLE IF EXISTS posts_v_rels_backup;
  `)
}
